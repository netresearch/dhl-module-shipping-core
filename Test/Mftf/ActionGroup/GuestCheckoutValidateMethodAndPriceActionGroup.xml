<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * See LICENSE.md for license details.
  */
-->
<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <!-- Go to checkout and validate shipping price and method -->
    <actionGroup name="GuestCheckoutValidateMethodAndPriceActionGroup"
                 extends="GuestCheckoutFillingShippingSectionWithoutRegionActionGroup">
        <arguments>
            <argument name="expectedShippingCarrierCode" type="string"/>
            <argument name="expectedShippingMethodLabel" type="string"/>
            <!-- Use a very small value to ensure prices are available and not 0.0 -->
            <argument name="expectedShippingMethodPrice" type="string" defaultValue="0.001"/>
        </arguments>

        <remove keyForRemoval="selectFirstShippingMethod"/>
        <remove keyForRemoval="waitForNextButton"/>
        <remove keyForRemoval="clickNext"/>
        <remove keyForRemoval="waitForPaymentSectionLoaded"/>
        <remove keyForRemoval="assertCheckoutPaymentUrl"/>

        <scrollTo selector="#opc-shipping_method" stepKey="scrollToShippingMethodsGroup"/>
        <waitForAjaxLoad stepKey="waitForAjaxLoad" time="30"/>

        <!-- Get the shipping carrier name -->
        <grabTextFrom selector="{{StorefrontCheckoutSection.checkoutShippingMethod(expectedShippingCarrierCode)}}" stepKey="grabShippingMethod"/>

        <assertEquals stepKey="assertShippingMethod">
            <actualResult type="variable">grabShippingMethod</actualResult>
            <expectedResult type="string">{{expectedShippingMethodLabel}}</expectedResult>
        </assertEquals>

        <!-- Extract the first shipping carrier price -->
        <executeJS function="return parseFloat(jQuery('{{StorefrontCheckoutSection.checkoutShippingLabelJQuery(expectedShippingCarrierCode)}}').prev('.col-price').find('.price .price').first().text().replace(/[^0-9.-]+/g, ''));"
                   stepKey="priceColumnText"/>

        <assertGreaterThanOrEqual stepKey="assertPriceColumnText">
            <actualResult type="variable">priceColumnText</actualResult>
            <expectedResult type="float">{{expectedShippingMethodPrice}}</expectedResult>
        </assertGreaterThanOrEqual>
    </actionGroup>
</actionGroups>
